name: Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.*"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "README.*"

jobs:
  test:
    name: Tests on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Get uname
        run: echo ::set-env name=UNAME::$(uname)
      - name: Get CloudFlare Token
        run: echo ::set-env name=CLOUDFLARE_TOKEN::${{ secrets.CLOUDFLARE_TOKEN }}
      - name: Get Test Domain Name
        run: echo ::set-env name=TEST_DOMAIN::${{ secrets.TEST_DOMAIN }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Test
        run: make test coverage
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Test Results on Ubuntu
          comment_title: Test Statistics
          hide_comments: all but latest
          comment_on_pr: true
          files: dist/test-results-${{ env.UNAME }}.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
      - name: Publish Code Coverage
        uses: shogo82148/actions-goveralls@v1.4.2
        with:
          path-to-profile: dist/coverage.out

  test-windows:
    name: Tests on Windows
    runs-on: windows-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Test
        run: |
          $env:TEST_DOMAIN = '${{ secrets.TEST_DOMAIN }}'
          $env:CLOUDFLARE_TOKEN = '${{ secrets.CLOUDFLARE_TOKEN }}'
          $env:TEST_BINARY = "$pwd\cloudflare-ddns.exe"
          $env:GOOS = 'windows'
          $env:GOARCH = 'amd64'
          go build -o $env:TEST_BINARY
          go test -v ./...
